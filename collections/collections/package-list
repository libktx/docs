$dokka.format:html-v1
$dokka.linkExtension:html
$dokka.location:ktx.collections////PointingToDeclaration/collections/ktx.collections/index.html
$dokka.location:ktx.collections//addAll/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#kotlin.collections.Iterable[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/add-all.html
$dokka.location:ktx.collections//addAll/com.badlogic.gdx.utils.ObjectSet[TypeParam(bounds=[kotlin.Any?])]#kotlin.collections.Iterable[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/add-all.html
$dokka.location:ktx.collections//component1/com.badlogic.gdx.utils.IntFloatMap.Entry#/PointingToDeclaration/collections/ktx.collections/component1.html
$dokka.location:ktx.collections//component1/com.badlogic.gdx.utils.IntIntMap.Entry#/PointingToDeclaration/collections/ktx.collections/component1.html
$dokka.location:ktx.collections//component1/com.badlogic.gdx.utils.IntMap.Entry[TypeParam(bounds=[kotlin.Any?])]#/PointingToDeclaration/collections/ktx.collections/component1.html
$dokka.location:ktx.collections//component1/com.badlogic.gdx.utils.LongMap.Entry[TypeParam(bounds=[kotlin.Any?])]#/PointingToDeclaration/collections/ktx.collections/component1.html
$dokka.location:ktx.collections//component1/com.badlogic.gdx.utils.ObjectIntMap.Entry[TypeParam(bounds=[kotlin.Any?])]#/PointingToDeclaration/collections/ktx.collections/component1.html
$dokka.location:ktx.collections//component1/com.badlogic.gdx.utils.ObjectMap.Entry[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#/PointingToDeclaration/collections/ktx.collections/component1.html
$dokka.location:ktx.collections//component2/com.badlogic.gdx.utils.IntFloatMap.Entry#/PointingToDeclaration/collections/ktx.collections/component2.html
$dokka.location:ktx.collections//component2/com.badlogic.gdx.utils.IntIntMap.Entry#/PointingToDeclaration/collections/ktx.collections/component2.html
$dokka.location:ktx.collections//component2/com.badlogic.gdx.utils.IntMap.Entry[TypeParam(bounds=[kotlin.Any?])]#/PointingToDeclaration/collections/ktx.collections/component2.html
$dokka.location:ktx.collections//component2/com.badlogic.gdx.utils.LongMap.Entry[TypeParam(bounds=[kotlin.Any?])]#/PointingToDeclaration/collections/ktx.collections/component2.html
$dokka.location:ktx.collections//component2/com.badlogic.gdx.utils.ObjectIntMap.Entry[TypeParam(bounds=[kotlin.Any?])]#/PointingToDeclaration/collections/ktx.collections/component2.html
$dokka.location:ktx.collections//component2/com.badlogic.gdx.utils.ObjectMap.Entry[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#/PointingToDeclaration/collections/ktx.collections/component2.html
$dokka.location:ktx.collections//contains/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/collections/ktx.collections/contains.html
$dokka.location:ktx.collections//contains/com.badlogic.gdx.utils.IdentityMap[TypeParam(bounds=[kotlin.Any?]),*]#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/collections/ktx.collections/contains.html
$dokka.location:ktx.collections//contains/com.badlogic.gdx.utils.IntFloatMap#kotlin.Int/PointingToDeclaration/collections/ktx.collections/contains.html
$dokka.location:ktx.collections//contains/com.badlogic.gdx.utils.IntIntMap#kotlin.Int/PointingToDeclaration/collections/ktx.collections/contains.html
$dokka.location:ktx.collections//contains/com.badlogic.gdx.utils.IntMap[*]#kotlin.Int/PointingToDeclaration/collections/ktx.collections/contains.html
$dokka.location:ktx.collections//contains/com.badlogic.gdx.utils.ObjectMap[TypeParam(bounds=[kotlin.Any?]),*]#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/collections/ktx.collections/contains.html
$dokka.location:ktx.collections//defaultArraySize/#/PointingToDeclaration/collections/ktx.collections/default-array-size.html
$dokka.location:ktx.collections//defaultLoadFactor/#/PointingToDeclaration/collections/ktx.collections/default-load-factor.html
$dokka.location:ktx.collections//defaultMapSize/#/PointingToDeclaration/collections/ktx.collections/default-map-size.html
$dokka.location:ktx.collections//defaultSetSize/#/PointingToDeclaration/collections/ktx.collections/default-set-size.html
$dokka.location:ktx.collections//filter/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/collections/ktx.collections/filter.html
$dokka.location:ktx.collections//filter/com.badlogic.gdx.utils.ObjectMap[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[com.badlogic.gdx.utils.ObjectMap.Entry[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])],kotlin.Boolean]/PointingToDeclaration/collections/ktx.collections/filter.html
$dokka.location:ktx.collections//filter/com.badlogic.gdx.utils.ObjectSet[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/collections/ktx.collections/filter.html
$dokka.location:ktx.collections//flatMap/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.collections.Iterable[TypeParam(bounds=[kotlin.Any?])]]/PointingToDeclaration/collections/ktx.collections/flat-map.html
$dokka.location:ktx.collections//flatMap/com.badlogic.gdx.utils.ObjectMap[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[com.badlogic.gdx.utils.ObjectMap.Entry[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])],kotlin.collections.Iterable[TypeParam(bounds=[kotlin.Any?])]]/PointingToDeclaration/collections/ktx.collections/flat-map.html
$dokka.location:ktx.collections//flatMap/com.badlogic.gdx.utils.ObjectSet[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.collections.Iterable[TypeParam(bounds=[kotlin.Any?])]]/PointingToDeclaration/collections/ktx.collections/flat-map.html
$dokka.location:ktx.collections//flatten/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.collections.Iterable[TypeParam(bounds=[kotlin.Any?])]])]#/PointingToDeclaration/collections/ktx.collections/flatten.html
$dokka.location:ktx.collections//flatten/com.badlogic.gdx.utils.ObjectMap[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.collections.Iterable[TypeParam(bounds=[kotlin.Any?])]])]#/PointingToDeclaration/collections/ktx.collections/flatten.html
$dokka.location:ktx.collections//flatten/com.badlogic.gdx.utils.ObjectSet[TypeParam(bounds=[kotlin.collections.Iterable[TypeParam(bounds=[kotlin.Any?])]])]#/PointingToDeclaration/collections/ktx.collections/flatten.html
$dokka.location:ktx.collections//gdxArrayOf/#kotlin.Array[TypeParam(bounds=[kotlin.Any])]/PointingToDeclaration/collections/ktx.collections/gdx-array-of.html
$dokka.location:ktx.collections//gdxArrayOf/#kotlin.Boolean#kotlin.Int/PointingToDeclaration/collections/ktx.collections/gdx-array-of.html
$dokka.location:ktx.collections//gdxIdentityMapOf/#kotlin.Array[kotlin.Pair[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]]#kotlin.Int#kotlin.Float/PointingToDeclaration/collections/ktx.collections/gdx-identity-map-of.html
$dokka.location:ktx.collections//gdxIdentityMapOf/#kotlin.Int#kotlin.Float/PointingToDeclaration/collections/ktx.collections/gdx-identity-map-of.html
$dokka.location:ktx.collections//gdxIntFloatMap/#kotlin.Int#kotlin.Float/PointingToDeclaration/collections/ktx.collections/gdx-int-float-map.html
$dokka.location:ktx.collections//gdxIntIntMap/#kotlin.Int#kotlin.Float/PointingToDeclaration/collections/ktx.collections/gdx-int-int-map.html
$dokka.location:ktx.collections//gdxIntMap/#kotlin.Int#kotlin.Float/PointingToDeclaration/collections/ktx.collections/gdx-int-map.html
$dokka.location:ktx.collections//gdxMapOf/#kotlin.Array[kotlin.Pair[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]]#kotlin.Int#kotlin.Float/PointingToDeclaration/collections/ktx.collections/gdx-map-of.html
$dokka.location:ktx.collections//gdxMapOf/#kotlin.Int#kotlin.Float/PointingToDeclaration/collections/ktx.collections/gdx-map-of.html
$dokka.location:ktx.collections//gdxSetOf/#kotlin.Array[TypeParam(bounds=[kotlin.Any?])]#kotlin.Int#kotlin.Float/PointingToDeclaration/collections/ktx.collections/gdx-set-of.html
$dokka.location:ktx.collections//gdxSetOf/#kotlin.Int#kotlin.Float/PointingToDeclaration/collections/ktx.collections/gdx-set-of.html
$dokka.location:ktx.collections//get/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#kotlin.Int#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/collections/ktx.collections/get.html
$dokka.location:ktx.collections//get/com.badlogic.gdx.utils.IntFloatMap#kotlin.Int/PointingToDeclaration/collections/ktx.collections/get.html
$dokka.location:ktx.collections//get/com.badlogic.gdx.utils.IntIntMap#kotlin.Int/PointingToDeclaration/collections/ktx.collections/get.html
$dokka.location:ktx.collections//getOrPut/com.badlogic.gdx.utils.ArrayMap[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#TypeParam(bounds=[kotlin.Any?])#kotlin.Function0[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/get-or-put.html
$dokka.location:ktx.collections//getOrPut/com.badlogic.gdx.utils.IdentityMap[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#TypeParam(bounds=[kotlin.Any?])#kotlin.Function0[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/get-or-put.html
$dokka.location:ktx.collections//getOrPut/com.badlogic.gdx.utils.IntMap[TypeParam(bounds=[kotlin.Any?])]#kotlin.Int#kotlin.Function0[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/get-or-put.html
$dokka.location:ktx.collections//getOrPut/com.badlogic.gdx.utils.ObjectMap[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#TypeParam(bounds=[kotlin.Any?])#kotlin.Function0[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/get-or-put.html
$dokka.location:ktx.collections//isEmpty/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]?#/PointingToDeclaration/collections/ktx.collections/is-empty.html
$dokka.location:ktx.collections//isEmpty/com.badlogic.gdx.utils.ObjectMap[*,*]?#/PointingToDeclaration/collections/ktx.collections/is-empty.html
$dokka.location:ktx.collections//isEmpty/com.badlogic.gdx.utils.ObjectSet[TypeParam(bounds=[kotlin.Any?])]?#/PointingToDeclaration/collections/ktx.collections/is-empty.html
$dokka.location:ktx.collections//isNotEmpty/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]?#/PointingToDeclaration/collections/ktx.collections/is-not-empty.html
$dokka.location:ktx.collections//isNotEmpty/com.badlogic.gdx.utils.ObjectMap[*,*]?#/PointingToDeclaration/collections/ktx.collections/is-not-empty.html
$dokka.location:ktx.collections//isNotEmpty/com.badlogic.gdx.utils.ObjectSet[TypeParam(bounds=[kotlin.Any?])]?#/PointingToDeclaration/collections/ktx.collections/is-not-empty.html
$dokka.location:ktx.collections//iterate/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function2[TypeParam(bounds=[kotlin.Any?]),kotlin.collections.MutableIterator[TypeParam(bounds=[kotlin.Any?])],kotlin.Unit]/PointingToDeclaration/collections/ktx.collections/iterate.html
$dokka.location:ktx.collections//iterate/com.badlogic.gdx.utils.IdentityMap[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.Function3[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),kotlin.collections.MutableIterator[com.badlogic.gdx.utils.ObjectMap.Entry[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]],kotlin.Unit]/PointingToDeclaration/collections/ktx.collections/iterate.html
$dokka.location:ktx.collections//iterate/com.badlogic.gdx.utils.ObjectMap[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.Function3[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?]),kotlin.collections.MutableIterator[com.badlogic.gdx.utils.ObjectMap.Entry[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]],kotlin.Unit]/PointingToDeclaration/collections/ktx.collections/iterate.html
$dokka.location:ktx.collections//iterate/com.badlogic.gdx.utils.ObjectSet[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function2[TypeParam(bounds=[kotlin.Any?]),kotlin.collections.MutableIterator[TypeParam(bounds=[kotlin.Any?])],kotlin.Unit]/PointingToDeclaration/collections/ktx.collections/iterate.html
$dokka.location:ktx.collections//lastIndex/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]?#/PointingToDeclaration/collections/ktx.collections/last-index.html
$dokka.location:ktx.collections//lastIndex/com.badlogic.gdx.utils.BooleanArray?#/PointingToDeclaration/collections/ktx.collections/last-index.html
$dokka.location:ktx.collections//lastIndex/com.badlogic.gdx.utils.FloatArray?#/PointingToDeclaration/collections/ktx.collections/last-index.html
$dokka.location:ktx.collections//lastIndex/com.badlogic.gdx.utils.IntArray?#/PointingToDeclaration/collections/ktx.collections/last-index.html
$dokka.location:ktx.collections//map/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/map.html
$dokka.location:ktx.collections//map/com.badlogic.gdx.utils.ObjectMap[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[com.badlogic.gdx.utils.ObjectMap.Entry[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])],TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/map.html
$dokka.location:ktx.collections//map/com.badlogic.gdx.utils.ObjectSet[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/map.html
$dokka.location:ktx.collections//minus/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/collections/ktx.collections/minus.html
$dokka.location:ktx.collections//minus/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#kotlin.Array[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/minus.html
$dokka.location:ktx.collections//minus/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#kotlin.collections.Iterable[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/minus.html
$dokka.location:ktx.collections//minus/com.badlogic.gdx.utils.ObjectSet[TypeParam(bounds=[kotlin.Any?])]#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/collections/ktx.collections/minus.html
$dokka.location:ktx.collections//minus/com.badlogic.gdx.utils.ObjectSet[TypeParam(bounds=[kotlin.Any?])]#kotlin.Array[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/minus.html
$dokka.location:ktx.collections//minus/com.badlogic.gdx.utils.ObjectSet[TypeParam(bounds=[kotlin.Any?])]#kotlin.collections.Iterable[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/minus.html
$dokka.location:ktx.collections//minusAssign/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/collections/ktx.collections/minus-assign.html
$dokka.location:ktx.collections//minusAssign/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#kotlin.Array[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/minus-assign.html
$dokka.location:ktx.collections//minusAssign/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#kotlin.collections.Iterable[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/minus-assign.html
$dokka.location:ktx.collections//minusAssign/com.badlogic.gdx.utils.ObjectSet[TypeParam(bounds=[kotlin.Any?])]#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/collections/ktx.collections/minus-assign.html
$dokka.location:ktx.collections//minusAssign/com.badlogic.gdx.utils.ObjectSet[TypeParam(bounds=[kotlin.Any?])]#kotlin.Array[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/minus-assign.html
$dokka.location:ktx.collections//minusAssign/com.badlogic.gdx.utils.ObjectSet[TypeParam(bounds=[kotlin.Any?])]#kotlin.collections.Iterable[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/minus-assign.html
$dokka.location:ktx.collections//plus/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/collections/ktx.collections/plus.html
$dokka.location:ktx.collections//plus/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#kotlin.Array[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/plus.html
$dokka.location:ktx.collections//plus/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#kotlin.collections.Collection[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/plus.html
$dokka.location:ktx.collections//plus/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#kotlin.collections.Iterable[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/plus.html
$dokka.location:ktx.collections//plus/com.badlogic.gdx.utils.ObjectSet[TypeParam(bounds=[kotlin.Any?])]#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/collections/ktx.collections/plus.html
$dokka.location:ktx.collections//plus/com.badlogic.gdx.utils.ObjectSet[TypeParam(bounds=[kotlin.Any?])]#kotlin.Array[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/plus.html
$dokka.location:ktx.collections//plus/com.badlogic.gdx.utils.ObjectSet[TypeParam(bounds=[kotlin.Any?])]#kotlin.collections.Iterable[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/plus.html
$dokka.location:ktx.collections//plusAssign/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/collections/ktx.collections/plus-assign.html
$dokka.location:ktx.collections//plusAssign/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#kotlin.Array[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/plus-assign.html
$dokka.location:ktx.collections//plusAssign/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#kotlin.collections.Iterable[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/plus-assign.html
$dokka.location:ktx.collections//plusAssign/com.badlogic.gdx.utils.ObjectSet[TypeParam(bounds=[kotlin.Any?])]#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/collections/ktx.collections/plus-assign.html
$dokka.location:ktx.collections//plusAssign/com.badlogic.gdx.utils.ObjectSet[TypeParam(bounds=[kotlin.Any?])]#kotlin.Array[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/plus-assign.html
$dokka.location:ktx.collections//plusAssign/com.badlogic.gdx.utils.ObjectSet[TypeParam(bounds=[kotlin.Any?])]#kotlin.collections.Iterable[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/plus-assign.html
$dokka.location:ktx.collections//removeAll/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#com.badlogic.gdx.utils.Pool[TypeParam(bounds=[kotlin.Any?])]?#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/collections/ktx.collections/remove-all.html
$dokka.location:ktx.collections//removeAll/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#kotlin.Array[TypeParam(bounds=[kotlin.Any?])]#kotlin.Boolean/PointingToDeclaration/collections/ktx.collections/remove-all.html
$dokka.location:ktx.collections//removeAll/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#kotlin.collections.Iterable[TypeParam(bounds=[kotlin.Any?])]#kotlin.Boolean/PointingToDeclaration/collections/ktx.collections/remove-all.html
$dokka.location:ktx.collections//removeAll/com.badlogic.gdx.utils.ObjectSet[TypeParam(bounds=[kotlin.Any?])]#kotlin.Array[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/remove-all.html
$dokka.location:ktx.collections//removeAll/com.badlogic.gdx.utils.ObjectSet[TypeParam(bounds=[kotlin.Any?])]#kotlin.collections.Iterable[TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/remove-all.html
$dokka.location:ktx.collections//retainAll/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#com.badlogic.gdx.utils.Pool[TypeParam(bounds=[kotlin.Any?])]?#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),kotlin.Boolean]/PointingToDeclaration/collections/ktx.collections/retain-all.html
$dokka.location:ktx.collections//set/com.badlogic.gdx.utils.ArrayMap[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#TypeParam(bounds=[kotlin.Any?])#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/collections/ktx.collections/set.html
$dokka.location:ktx.collections//set/com.badlogic.gdx.utils.IdentityMap[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#TypeParam(bounds=[kotlin.Any?])#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/collections/ktx.collections/set.html
$dokka.location:ktx.collections//set/com.badlogic.gdx.utils.IntFloatMap#kotlin.Int#kotlin.Float/PointingToDeclaration/collections/ktx.collections/set.html
$dokka.location:ktx.collections//set/com.badlogic.gdx.utils.IntIntMap#kotlin.Int#kotlin.Int/PointingToDeclaration/collections/ktx.collections/set.html
$dokka.location:ktx.collections//set/com.badlogic.gdx.utils.IntMap[TypeParam(bounds=[kotlin.Any?])]#kotlin.Int#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/collections/ktx.collections/set.html
$dokka.location:ktx.collections//set/com.badlogic.gdx.utils.ObjectMap[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#TypeParam(bounds=[kotlin.Any?])#TypeParam(bounds=[kotlin.Any?])/PointingToDeclaration/collections/ktx.collections/set.html
$dokka.location:ktx.collections//size/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]?#/PointingToDeclaration/collections/ktx.collections/size.html
$dokka.location:ktx.collections//size/com.badlogic.gdx.utils.BooleanArray?#/PointingToDeclaration/collections/ktx.collections/size.html
$dokka.location:ktx.collections//size/com.badlogic.gdx.utils.FloatArray?#/PointingToDeclaration/collections/ktx.collections/size.html
$dokka.location:ktx.collections//size/com.badlogic.gdx.utils.IntArray?#/PointingToDeclaration/collections/ktx.collections/size.html
$dokka.location:ktx.collections//size/com.badlogic.gdx.utils.ObjectMap[*,*]?#/PointingToDeclaration/collections/ktx.collections/size.html
$dokka.location:ktx.collections//size/com.badlogic.gdx.utils.ObjectSet[TypeParam(bounds=[kotlin.Any?])]?#/PointingToDeclaration/collections/ktx.collections/size.html
$dokka.location:ktx.collections//sortBy/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Comparable[^]])?]/PointingToDeclaration/collections/ktx.collections/sort-by.html
$dokka.location:ktx.collections//sortByDescending/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Comparable[^]])?]/PointingToDeclaration/collections/ktx.collections/sort-by-descending.html
$dokka.location:ktx.collections//sortDescending/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Comparable[^]])]#/PointingToDeclaration/collections/ktx.collections/sort-descending.html
$dokka.location:ktx.collections//toGdxArray/com.badlogic.gdx.utils.ObjectSet[TypeParam(bounds=[kotlin.Any])]#kotlin.Boolean#kotlin.Int/PointingToDeclaration/collections/ktx.collections/to-gdx-array.html
$dokka.location:ktx.collections//toGdxArray/kotlin.Array[TypeParam(bounds=[kotlin.Any])]#kotlin.Boolean#kotlin.Int/PointingToDeclaration/collections/ktx.collections/to-gdx-array.html
$dokka.location:ktx.collections//toGdxArray/kotlin.BooleanArray#kotlin.Boolean#kotlin.Int/PointingToDeclaration/collections/ktx.collections/to-gdx-array.html
$dokka.location:ktx.collections//toGdxArray/kotlin.FloatArray#kotlin.Boolean#kotlin.Int/PointingToDeclaration/collections/ktx.collections/to-gdx-array.html
$dokka.location:ktx.collections//toGdxArray/kotlin.IntArray#kotlin.Boolean#kotlin.Int/PointingToDeclaration/collections/ktx.collections/to-gdx-array.html
$dokka.location:ktx.collections//toGdxArray/kotlin.collections.Iterable[TypeParam(bounds=[kotlin.Any])]#kotlin.Boolean#kotlin.Int/PointingToDeclaration/collections/ktx.collections/to-gdx-array.html
$dokka.location:ktx.collections//toGdxMap/kotlin.Array[TypeParam(bounds=[kotlin.Any?])]#kotlin.Int#kotlin.Float#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/to-gdx-map.html
$dokka.location:ktx.collections//toGdxMap/kotlin.Array[TypeParam(bounds=[kotlin.Any?])]#kotlin.Int#kotlin.Float#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/to-gdx-map.html
$dokka.location:ktx.collections//toGdxMap/kotlin.collections.Iterable[TypeParam(bounds=[kotlin.Any?])]#kotlin.Int#kotlin.Float#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/to-gdx-map.html
$dokka.location:ktx.collections//toGdxMap/kotlin.collections.Iterable[TypeParam(bounds=[kotlin.Any?])]#kotlin.Int#kotlin.Float#kotlin.Function1[TypeParam(bounds=[kotlin.Any?]),TypeParam(bounds=[kotlin.Any?])]/PointingToDeclaration/collections/ktx.collections/to-gdx-map.html
$dokka.location:ktx.collections//toGdxSet/com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any])]#kotlin.Int#kotlin.Float/PointingToDeclaration/collections/ktx.collections/to-gdx-set.html
$dokka.location:ktx.collections//toGdxSet/com.badlogic.gdx.utils.ObjectMap[TypeParam(bounds=[kotlin.Any?]),*]#/PointingToDeclaration/collections/ktx.collections/to-gdx-set.html
$dokka.location:ktx.collections//toGdxSet/kotlin.Array[TypeParam(bounds=[kotlin.Any?])]#kotlin.Int#kotlin.Float/PointingToDeclaration/collections/ktx.collections/to-gdx-set.html
$dokka.location:ktx.collections//toGdxSet/kotlin.IntArray#kotlin.Int#kotlin.Float/PointingToDeclaration/collections/ktx.collections/to-gdx-set.html
$dokka.location:ktx.collections//toGdxSet/kotlin.collections.Iterable[TypeParam(bounds=[kotlin.Any?])]#kotlin.Int#kotlin.Float/PointingToDeclaration/collections/ktx.collections/to-gdx-set.html
$dokka.location:ktx.collections//transfer/com.badlogic.gdx.utils.Array[TypeParam(bounds=[TypeParam(bounds=[kotlin.Any?])])]#com.badlogic.gdx.utils.Array[TypeParam(bounds=[kotlin.Any?])]#kotlin.Function1[TypeParam(bounds=[TypeParam(bounds=[kotlin.Any?])]),kotlin.Boolean]/PointingToDeclaration/collections/ktx.collections/transfer.html
ktx.collections

